name: "Reusable Base Step-4"

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      is_main_pipeline:
        description: "Whether this is a Main (Non-PR) Pipeline"
        required: false
        type: boolean

jobs:
  PrintJob-1:
    runs-on: ubuntu-latest
    steps:
      - name: Print Something
        run: |
          echo "Printing from Job-1"
      - name: Get Date
        id: get-date
        if: ${{ inputs.is_main_pipeline }}
        run: |
          echo "time_value=$(date)" >> $GITHUB_OUTPUT
          sleep 10s
    outputs:
      time_value: ${{ steps.get-date.outputs.time_value }}

  PrintJob-2:
    needs:
      - PrintJob-1
    runs-on: ubuntu-latest
    steps:
      - name: Print Something
        run: |
          echo "Hello from the Base. Is-Main-Pipeline: ${{ inputs.is_main_pipeline }}"
      - name: Apply Changes
        if: ${{ inputs.is_main_pipeline }}
        run: |
          echo "Current time = $(date)"
          echo "Time from last Job=${{ needs.PrintJob-1.outputs.time_value }}"

  Terraform-Deploy:
    needs:
      - PrintJob-2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: "eu-central-1"
          role-to-assume: "arn:aws:iam::160071257600:role/GitHubActionsInfrastructureDeploymentRole"

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform
        run: |
          if [ -d ".terraform" ]; then
            echo "Removing .terraform..."
            rm -rf .terraform
          fi
          terraform init -reconfigure -upgrade=true -backend-config="bucket=terraform-state-farid-2023-0526" -backend-config="region=eu-central-1" -backend-config="key=infra-demo" -backend-config="dynamodb_table=terraform-state-locks"
      - name: Terraform Plan
        working-directory: terraform
        run: |
          terraform plan -out tfplan


  NotifyFailure:
    name: Notify Slack
    runs-on: ubuntu-latest
    needs:
      - Terraform-Deploy
    if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
    steps:
      - name: Send custom JSON data to Slack workflow
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ join(needs.*.result, ',') }}\nWorkflow: ${{ github.workflow }}\nMain: ${{ inputs.is_main_pipeline }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
